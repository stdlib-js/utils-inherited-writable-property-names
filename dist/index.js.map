{
  "version": 3,
  "sources": ["../lib/main.js", "../lib/index.js"],
  "sourcesContent": ["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar MAX_SAFE_INTEGER = require( '@stdlib/constants-float64-max-safe-integer' );\nvar isPositiveInteger = require( '@stdlib/assert-is-positive-integer' ).isPrimitive;\nvar isWritableProperty = require( '@stdlib/assert-is-writable-property' );\nvar getOwnPropertyNames = require( '@stdlib/utils-property-names' );\nvar getPrototypeOf = require( '@stdlib/utils-get-prototype-of' );\nvar hasOwnProp = require( '@stdlib/assert-has-own-property' );\nvar format = require( '@stdlib/string-format' );\n\n\n// MAIN //\n\n/**\n* Returns an array of an object's inherited writable property names.\n*\n* @param {*} value - input object\n* @param {PositiveInteger} [level] - inheritance level\n* @throws {TypeError} second argument must be a positive integer\n* @returns {Array} a list of inherited writable property names\n*\n* @example\n* var keys = inheritedWritablePropertyNames( {} );\n*/\nfunction inheritedWritablePropertyNames( value, level ) { // eslint-disable-line id-length\n\tvar names;\n\tvar cache;\n\tvar obj;\n\tvar tmp;\n\tvar N;\n\tvar n;\n\tvar k;\n\tvar i;\n\n\tif ( arguments.length > 1 ) {\n\t\tif ( !isPositiveInteger( level ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a positive integer. Value: `%s`.', level ) );\n\t\t}\n\t\tN = level;\n\t} else {\n\t\tN = MAX_SAFE_INTEGER;\n\t}\n\tif ( value === null || value === void 0 ) {\n\t\treturn [];\n\t}\n\t// Get the value's prototype:\n\tobj = getPrototypeOf( value );\n\n\t// Walk the prototype chain collecting writable property names...\n\tnames = [];\n\tcache = {};\n\tn = 1;\n\twhile ( obj && n <= N ) {\n\t\ttmp = getOwnPropertyNames( obj );\n\t\tfor ( i = 0; i < tmp.length; i++ ) {\n\t\t\tk = tmp[ i ];\n\t\t\tif (\n\t\t\t\thasOwnProp( cache, k ) === false &&\n\t\t\t\tisWritableProperty( obj, k )\n\t\t\t) {\n\t\t\t\tnames.push( k );\n\t\t\t}\n\t\t\tcache[ k ] = true;\n\t\t}\n\t\tobj = getPrototypeOf( obj );\n\t\tn += 1;\n\t}\n\n\treturn names;\n}\n\n\n// EXPORTS //\n\nmodule.exports = inheritedWritablePropertyNames;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Return an array of an object's inherited writable property names.\n*\n* @module @stdlib/utils-inherited-writable-property-names\n*\n* @example\n* var inheritedWritablePropertyNames = require( '@stdlib/utils-inherited-writable-property-names' );\n*\n* var keys = inheritedWritablePropertyNames( [] );\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n"],
  "mappings": "uGAAA,IAAAA,EAAAC,EAAA,SAAAC,EAAAC,EAAA,cAsBA,IAAIC,EAAmB,QAAS,4CAA6C,EACzEC,EAAoB,QAAS,oCAAqC,EAAE,YACpEC,EAAqB,QAAS,qCAAsC,EACpEC,EAAsB,QAAS,8BAA+B,EAC9DC,EAAiB,QAAS,gCAAiC,EAC3DC,EAAa,QAAS,iCAAkC,EACxDC,EAAS,QAAS,uBAAwB,EAgB9C,SAASC,EAAgCC,EAAOC,EAAQ,CACvD,IAAIC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EAEJ,GAAK,UAAU,OAAS,EAAI,CAC3B,GAAK,CAAChB,EAAmBQ,CAAM,EAC9B,MAAM,IAAI,UAAWH,EAAQ,6EAA8EG,CAAM,CAAE,EAEpHK,EAAIL,CACL,MACCK,EAAId,EAEL,GAAKQ,GAAU,KACd,MAAO,CAAC,EAST,IANAI,EAAMR,EAAgBI,CAAM,EAG5BE,EAAQ,CAAC,EACTC,EAAQ,CAAC,EACTI,EAAI,EACIH,GAAOG,GAAKD,GAAI,CAEvB,IADAD,EAAMV,EAAqBS,CAAI,EACzBK,EAAI,EAAGA,EAAIJ,EAAI,OAAQI,IAC5BD,EAAIH,EAAKI,CAAE,EAEVZ,EAAYM,EAAOK,CAAE,IAAM,IAC3Bd,EAAoBU,EAAKI,CAAE,GAE3BN,EAAM,KAAMM,CAAE,EAEfL,EAAOK,CAAE,EAAI,GAEdJ,EAAMR,EAAgBQ,CAAI,EAC1BG,GAAK,CACN,CAEA,OAAOL,CACR,CAKAX,EAAO,QAAUQ,IC7DjB,IAAIW,EAAO,IAKX,OAAO,QAAUA",
  "names": ["require_main", "__commonJSMin", "exports", "module", "MAX_SAFE_INTEGER", "isPositiveInteger", "isWritableProperty", "getOwnPropertyNames", "getPrototypeOf", "hasOwnProp", "format", "inheritedWritablePropertyNames", "value", "level", "names", "cache", "obj", "tmp", "N", "n", "k", "i", "main"]
}
